{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetRgName": {
      "type": "string",
      "metadata": {
        "description": "resource group name of vnet"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "vnet name"
      }
    },
    "subNetName": {
      "type": "string",
      "metadata": {
        "description": "vnet name"
      }
    },
    "NewStorageAccountSuffix": {
      "type": "string",
      "defaultValue": "msstorage",
      "metadata": {
        "description": "Unique Name for the Storage Account where the Virtual Machine's disks will be placed"
      }
    },
    "vmDnsName": {
      "type": "string",
      "defaultValue": "configsrv",
      "metadata": {
        "description": "DNS  name for the VM"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VM instances to create, default is 2"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "demouser",
      "metadata": {
        "description": "Admin user name for the Virtual Machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the Virtual Machines"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "OpenLogic",
      "metadata": {
        "description": " Publisher for the OS image, the default is OpenLogic"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "CentOS",
      "metadata": {
        "description": "The name of the image offer. The default is Centos"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "7.2",
      "metadata": {
        "description": "Version of the image. The default is 7.2"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "metadata": {
        "description": "VM Size"
      }
    },
    "chef_node_name": {
      "type": "string",
      "metadata": {
        "description": "Unique name for the node (VM) in the Chef Organization"
      }
    },
    "chef_server_url": {
      "type": "string",
      "metadata": {
        "description": "Organization URL for the Chef Server. Example https://ChefServerDnsName.cloudapp.net/organizations/Orgname"
      }
    },
    "validation_client_name": {
      "type": "string",
      "metadata": {
        "description": "Validator key name for the organization. Example : MyOrg-validator"
      }
    },
    "runlist": {
      "type": "string",
      "metadata": {
        "description": "Optional Run List to Execute"
      }
    },
    "validation_key": {
      "type": "string",
      "metadata": {
        "description": "JSON Escaped Validation Key"
      }
    },
    "validation_key_format": {
      "type": "string",
      "allowedValues": [
        "plaintext",
        "base64encoded"
      ],
      "defaultValue": "plaintext",
      "metadata": {
        "description": "Format in which Validation Key is given. e.g. plaintext, base64encoded"
      }
    },
    "chef_environment": {
      "defaultValue": "_default",
      "type": "String"
    },
    "databag_secret": {
      "defaultValue": "",
      "type": "SecureString"
    },
    "chef_server_crt": {
      "type": "SecureString"
    },
    "client_rb": {
      "defaultValue": "",
      "type": "String"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "storage account type"
      }
    },
    "loadBalancers_configSrvLB_name": {
      "defaultValue": "configSrvLB",
      "type": "String"
    },
    "publicIPAddresses_configSrvLBIp_name": {
      "defaultValue": "configSrvLBIp",
      "type": "String"
    },
    "healthProbePath":{
      "type": "String"
    },
    "frontendPort":{
      "type": "String"
    },
    "backendPort":{
      "type": "String"
    }
  },
  "variables": {
    "vnetID": "[resourceId(parameters('vnetRgName'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "vmExtensionName": "LinuxChefExtension",
    "vmName": "[parameters('vmDnsName')]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "cconfigIP",
    "publicIPAddressType": "Dynamic",
    "nicName": "configsrvVMNic",
    "availabilitySetName": "[concat(parameters('vmDnsName'),'AS')]",
    "uniqueStringArray": [
      "[concat(parameters('newStorageAccountSuffix'),uniqueString(concat(parameters('NewStorageAccountSuffix'), '0')))]",
      "[concat(parameters('newStorageAccountSuffix'),uniqueString(concat(parameters('NewStorageAccountSuffix'), '1')))]"
    ],
    "loadBalancers_configSrvLB_id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancers_configSrvLB_name')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "loadBalancers_configSrvLB_id_1": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_configSrvLB_name')), '/backendAddressPools/LBBE')]",
    "loadBalancers_configSrvLB_id_2": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancers_configSrvLB_name')),'/probes/HealthProbe')]",
    "networkInterfaces_configsrvVMNic1_id": {
      "defaultValue": "/subscriptions/178b21dd-3d60-4c42-91dd-894bcf3334d5/resourceGroups/MicroServiceVNETRG/providers/Microsoft.Network/virtualNetworks/MicroServiceVNET/subnets/BackEndNetwork",
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('uniqueStringArray')[copyIndex()]]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "storageLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "tags": {
        "displayName": "Storage Accounts"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 3
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "publicIPLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('vmDnsName'),copyIndex())]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'),copyIndex())]",
        "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_configSrvLB_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig',copyIndex())]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_configSrvLB_name')), '/backendAddressPools/LBBE')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray')[copyIndex()])]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'),copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('uniqueStringArray')[copyIndex()],'.blob.core.windows.net/vhds/','osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),copyIndex(),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "extensionLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Chef.Bootstrap.WindowsAzure",
        "type": "LinuxChefClient",
        "typeHandlerVersion": "1210.12",
        "settings": {
          "bootstrap_options": {
            "chef_node_name": "[concat(parameters('chef_node_name'),copyIndex())]",
            "chef_server_url": "[parameters('chef_server_url')]",
            "validation_client_name": "[parameters('validation_client_name')]",
            "environment": "[parameters('chef_environment')]",
            "secret": "[parameters('databag_secret')]",
            "client_rb": "[parameters('client_rb')]"
          },
          "runlist": "[parameters('runlist')]",
          "validation_key_format": "[parameters('validation_key_format')]"
        },
        "protectedSettings": {
          "validation_key": "[parameters('validation_key')]",
          "chef_server_crt": "[parameters('chef_server_crt')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_configSrvLBIp_name')]",
      "apiVersion": "2015-06-15",
      "location": "westus",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmDnsName')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancers_configSrvLB_name')]",
      "apiVersion": "2015-06-15",
      "location": "westus",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_configSrvLBIp_name'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBE"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "Http",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('loadBalancers_configSrvLB_id')]"
              },
              "frontendPort": "[parameters('frontendPort')]",
              "backendPort": "[parameters('backendPort')]",
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[variables('loadBalancers_configSrvLB_id_1')]"
              },
              "probe": {
                "id": "[variables('loadBalancers_configSrvLB_id_2')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "HealthProbe",
            "properties": {
              "protocol": "Http",
              "port": "[parameters('backendPort')]",
              "requestPath": "[parameters('healthProbePath')]",
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [],
        "outboundNatRules": [],
        "inboundNatPools": []
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_configSrvLBIp_name'))]"
      ]
    }
  ]
}